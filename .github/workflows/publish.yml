# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Publish

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '**/README.md'
      - 'CODE_OF_CONDUCT.md'
      - 'CONTRIBUTING.md'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '**/README.md'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: macos-latest
    permissions:
      contents: write
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Gradle
      id: cache-gradle
      uses: actions/cache@v4
      with:
        path: |
         ~/.gradle/caches
         ~/.gradle/wrapper
         ~/Users/runner/.konan/
        key: "gradle-cache"

    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        dry_run: "${{ github.ref != 'refs/heads/main' || startsWith(github.event.head_commit.message, '[DOCS]') || startsWith(github.event.head_commit.message, '[docs]') }}"

    - name: Setup Pages
      if: github.ref == 'refs/heads/main'
      uses: actions/configure-pages@v5

    - name: 'Authenticate to Google Cloud'
      if: github.ref == 'refs/heads/main'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_TELERESO }}'

      # Setup gcloud CLI
    - name: Set up Cloud SDK
      if: github.ref == 'refs/heads/main'
      uses: google-github-actions/setup-gcloud@v2
    - name: Restore public docs
      if: github.ref == 'refs/heads/main'
      run: |-
        bucket="gs://telereso-docs/docs"
        projectDocs="$bucket/projects/${{ github.repository_id }}/public/docs"
        mkdir -p public/docs
        gsutil -o "GSUtil:parallel_process_count=1" cp "${projectDocs}.zip" docs.zip && unzip -q docs.zip -d public/ || gsutil -m -o "GSUtil:parallel_process_count=1" rsync -d -r "$projectDocs" public/docs
        rm -rf docs.zip
        rm -rf public/docs/__MACOSX

    - name: Set flavored version
      run: |
        echo "BUILD_NUMBER=-alpha.${{ github.run_number }}" >> $GITHUB_ENV
      if: startsWith(github.event.pull_request.title, '[DOCS]') != true && github.ref != 'refs/heads/main'

    - name: Build Artifacts
      if: startsWith(github.event.pull_request.title, '[DOCS]') != true
      run: |
        echo ${{ secrets.SIGNING_SECRET_KEY_RING_FILE }} | base64 -d > secret_key 
        bash scripts/publish.sh ${{ steps.tag_version.outputs.new_version }}${{env.BUILD_NUMBER}} '--sonatype'
      env:
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
        SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
        SIGNING_SECRET_KEY_RING_FILE: "/Users/runner/work/kmp-core/kmp-core/secret_key"
        SONATYPE_STAGING_PROFILE_ID: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}

    - name: Upload Test Reports
      if: always() # Ensure this runs even if previous steps fail
      uses: actions/upload-artifact@v4
      with:
        name: test-reports
        path: core-ui-test/build/telereso/reports
        retention-days: 2

    - name: Archive artifacts
      if: startsWith(github.event.pull_request.title, '[DOCS]') != true
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: build/.m2/
        retention-days: 2

    - name: Archive Docs
      if: startsWith(github.event.pull_request.title, '[DOCS]') != true
      uses: actions/upload-artifact@v4
      with:
        name: build-docs
        path: public
        retention-days: 1

    - name: Archive website
      uses: actions/upload-artifact@v4
      with:
        name: build-website
        path: website
        retention-days: 1

  website:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/download-artifact@v4
        if: github.ref == 'refs/heads/main'
        with:
          name: build-docs
          path: build-docs

      - uses: actions/download-artifact@v4
        with:
          name: build-website
          path: website

      - name: 'Authenticate to Google Cloud'
        if: github.ref == 'refs/heads/main'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_SA_TELERESO }}'
        # Setup gcloud CLI
      - name: Set up Cloud SDK
        if: github.ref == 'refs/heads/main'
        uses: google-github-actions/setup-gcloud@v2

      - name: Upload docs to bucket
        if: github.ref == 'refs/heads/main'
        run: |-
          bucket="gs://telereso-docs/docs"
          projectDocs="$bucket/projects/${{ github.repository_id }}/public/docs"
          cd build-docs 
          zip -q -r docs.zip docs
          gsutil -o "GSUtil:parallel_process_count=1" cp docs.zip "${projectDocs}.zip"

      - name: Build website
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./website
          destination: ./_website/

      - name: Archive built website
        if: startsWith(github.event.pull_request.title, '[DOCS]') || startsWith(github.event.pull_request.title, '[docs]')
        uses: actions/upload-artifact@v4
        with:
          name: built website
          path: _website
          retention-days: 1

      - name: Move website and docs into public
        if: github.ref == 'refs/heads/main'
        run: |-
          cp -R build-docs public
          cp -a _website/. public/
          echo "kmp.telereso.io" > public/CNAME

      - name: Upload pages artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'public'

  pages:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: website
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

